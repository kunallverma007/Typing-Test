{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar SemiCircleProgress = function SemiCircleProgress(_ref) {\n  var _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === undefined ? \"#02B732\" : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === undefined ? 10 : _ref$strokeWidth,\n      _ref$background = _ref.background,\n      background = _ref$background === undefined ? \"#D0D0CE\" : _ref$background,\n      _ref$diameter = _ref.diameter,\n      diameter = _ref$diameter === undefined ? 200 : _ref$diameter,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === undefined ? \"up\" : _ref$orientation,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === undefined ? \"right\" : _ref$direction,\n      _ref$showPercentValue = _ref.showPercentValue,\n      showPercentValue = _ref$showPercentValue === undefined ? false : _ref$showPercentValue,\n      percentage = _ref.percentage;\n  var coordinateForCircle = diameter / 2;\n  var radius = (diameter - 2 * strokeWidth) / 2;\n  var circumference = Math.PI * radius;\n  var percentageValue = void 0;\n\n  if (percentage > 100) {\n    percentageValue = 100;\n  } else if (percentage < 0) {\n    percentageValue = 0;\n  } else {\n    percentageValue = percentage;\n  }\n\n  var semiCirclePercentage = percentageValue * (circumference / 100);\n  var rotation = void 0;\n\n  if (orientation === \"down\") {\n    if (direction === \"left\") {\n      rotation = \"rotate(180deg) rotateY(180deg)\";\n    } else {\n      rotation = \"rotate(180deg)\";\n    }\n  } else {\n    if (direction === \"right\") {\n      rotation = \"rotateY(180deg)\";\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"semicircle-container\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(\"svg\", {\n    width: diameter,\n    height: diameter / 2,\n    style: {\n      transform: rotation,\n      overflow: \"hidden\"\n    }\n  }, React.createElement(\"circle\", {\n    cx: coordinateForCircle,\n    cy: coordinateForCircle,\n    r: radius,\n    fill: \"none\",\n    stroke: background,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    style: {\n      strokeDashoffset: circumference\n    }\n  }), React.createElement(\"circle\", {\n    cx: coordinateForCircle,\n    cy: coordinateForCircle,\n    r: radius,\n    fill: \"none\",\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    style: {\n      strokeDashoffset: semiCirclePercentage,\n      transition: \"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s\"\n    }\n  })), showPercentValue && React.createElement(\"span\", {\n    className: \"semicircle-percent-value\",\n    style: {\n      width: \"100%\",\n      left: \"0\",\n      textAlign: \"center\",\n      bottom: orientation === \"down\" ? \"auto\" : \"0\",\n      position: \"absolute\"\n    }\n  }, percentage, \"%\"));\n};\n\nfunction percentageValidation(isRequired) {\n  return function (props, propName, componentName) {\n    var prop = props[propName];\n\n    if (prop == null) {\n      if (isRequired) {\n        throw new Error(\"Percentage is a required prop.\");\n      }\n    } else {\n      if (typeof prop !== \"number\") {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n\n      if (props[propName] < 0 || props[propName] > 100) {\n        return new Error(\"Invalid percentage. Must be a number between 0 and 100.\");\n      }\n    }\n  };\n}\n\nvar percentageisRequired = percentageValidation(true);\nSemiCircleProgress.propTypes = {\n  stroke: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  background: PropTypes.string,\n  diameter: PropTypes.number,\n  orientation: PropTypes.oneOf([\"up\", \"down\"]),\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  showPercentValue: PropTypes.bool,\n  percentage: percentageisRequired\n};\nexport default SemiCircleProgress;","map":null,"metadata":{},"sourceType":"module"}